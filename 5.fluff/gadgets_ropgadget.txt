0x00000000004006a2 : adc byte ptr [rax], ah ; jmp rax
0x0000000000400829 : adc byte ptr [rax], ah ; ret
0x0000000000400632 : adc cl, byte ptr [rdx] ; and byte ptr [rax], al ; push 6 ; jmp 0x4005c9
0x0000000000400617 : add al, 0 ; add byte ptr [rax], al ; jmp 0x4005c4
0x000000000040080e : add al, bpl ; retf
0x00000000004005f7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x4005c4
0x000000000040080f : add al, ch ; retf
0x00000000004008cf : add bl, dh ; ret
0x00000000004008cd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004008cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004005d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4005c4
0x00000000004006ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004008cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005b3 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004005d9 : add byte ptr [rax], al ; jmp 0x4005c2
0x00000000004006ae : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004008ce : add byte ptr [rax], al ; ret
0x0000000000400728 : add byte ptr [rbp + 5], dh ; jmp 0x4006c3
0x0000000000400718 : add byte ptr [rcx], al ; ret
0x00000000004008b0 : add dword ptr [rax + 0x39], ecx ; jmp 0x40092d
0x00000000004005e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4005c4
0x0000000000400714 : add eax, 0x20096e ; add ebx, esi ; ret
0x0000000000400607 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x4005c4
0x0000000000400719 : add ebx, esi ; ret
0x00000000004005b6 : add esp, 8 ; ret
0x00000000004005b5 : add rsp, 8 ; ret
0x0000000000400848 : and byte ptr [rax], ah ; ret
0x0000000000400717 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004005d4 : and byte ptr [rax], al ; push 0 ; jmp 0x4005c7
0x00000000004005e4 : and byte ptr [rax], al ; push 1 ; jmp 0x4005c7
0x00000000004005f4 : and byte ptr [rax], al ; push 2 ; jmp 0x4005c7
0x0000000000400604 : and byte ptr [rax], al ; push 3 ; jmp 0x4005c7
0x0000000000400614 : and byte ptr [rax], al ; push 4 ; jmp 0x4005c7
0x0000000000400624 : and byte ptr [rax], al ; push 5 ; jmp 0x4005c7
0x0000000000400634 : and byte ptr [rax], al ; push 6 ; jmp 0x4005c7
0x0000000000400612 : and cl, byte ptr [rdx] ; and byte ptr [rax], al ; push 4 ; jmp 0x4005c9
0x0000000000400a63 : call qword ptr [rcx]
0x000000000040073e : call rax
0x000000000040098b : call rsp
0x00000000004005e2 : cmp cl, byte ptr [rdx] ; and byte ptr [rax], al ; push 1 ; jmp 0x4005c9
0x0000000000400726 : cmp dword ptr [rdi], 0 ; jne 0x400735 ; jmp 0x4006c5
0x0000000000400725 : cmp qword ptr [rdi], 0 ; jne 0x400736 ; jmp 0x4006c6
0x0000000000400824 : fild dword ptr [rcx + 0x5e] ; mov edi, 0x601050 ; ret
0x00000000004008ac : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400739 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040069d : je 0x4006b8 ; pop rbp ; mov edi, 0x601060 ; jmp rax
0x00000000004006eb : je 0x400700 ; pop rbp ; mov edi, 0x601060 ; jmp rax
0x0000000000400738 : je 0x400731 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004005db : jmp 0x4005c0
0x000000000040072b : jmp 0x4006c0
0x00000000004008b3 : jmp 0x40092a
0x00000000004006a5 : jmp rax
0x0000000000400729 : jne 0x400732 ; jmp 0x4006c2
0x0000000000400831 : jrcxz 0x40087d ; pop rsp ; mov r13d, 0x604060 ; ret
0x0000000000400805 : leave ; ret
0x0000000000400713 : mov byte ptr [rip + 0x20096e], 1 ; ret
0x000000000040084f : mov dword ptr [rdx], ebx ; pop r13 ; pop r12 ; xor byte ptr [r10], r12b ; ret
0x00000000004007ae : mov eax, 0 ; pop rbp ; ret
0x00000000004005b1 : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400835 : mov ebp, 0x604060 ; ret
0x000000000040073c : mov ebp, esp ; call rax
0x0000000000400846 : mov ebx, 0x602050 ; ret
0x0000000000400827 : mov edi, 0x601050 ; ret
0x00000000004006a0 : mov edi, 0x601060 ; jmp rax
0x0000000000400845 : mov r11d, 0x602050 ; ret
0x0000000000400834 : mov r13d, 0x604060 ; ret
0x000000000040073b : mov rbp, rsp ; call rax
0x0000000000400804 : nop ; leave ; ret
0x0000000000400815 : nop ; pop rbp ; ret
0x00000000004006a8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004008c8 : nop dword ptr [rax + rax] ; ret
0x00000000004006f5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000400716 : or dword ptr [rax], esp ; add byte ptr [rcx], al ; ret
0x0000000000400715 : outsb dx, byte ptr [rsi] ; or dword ptr [rax], esp ; add byte ptr [rcx], al ; ret
0x0000000000400832 : pop r12 ; mov r13d, 0x604060 ; ret
0x00000000004008bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400853 : pop r12 ; xor byte ptr [r10], r12b ; ret
0x0000000000400851 : pop r13 ; pop r12 ; xor byte ptr [r10], r12b ; ret
0x00000000004008be : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400825 : pop r14 ; mov edi, 0x601050 ; ret
0x00000000004008c0 : pop r14 ; pop r15 ; ret
0x0000000000400843 : pop r15 ; mov r11d, 0x602050 ; ret
0x00000000004008c2 : pop r15 ; ret
0x0000000000400740 : pop rbp ; jmp 0x4006c1
0x0000000000400712 : pop rbp ; mov byte ptr [rip + 0x20096e], 1 ; ret
0x000000000040069f : pop rbp ; mov edi, 0x601060 ; jmp rax
0x00000000004008bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400852 : pop rbp ; pop r12 ; xor byte ptr [r10], r12b ; ret
0x00000000004008bf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004006b0 : pop rbp ; ret
0x0000000000400844 : pop rdi ; mov r11d, 0x602050 ; ret
0x00000000004008c3 : pop rdi ; ret
0x0000000000400826 : pop rsi ; mov edi, 0x601050 ; ret
0x00000000004008c1 : pop rsi ; pop r15 ; ret
0x0000000000400833 : pop rsp ; mov r13d, 0x604060 ; ret
0x00000000004008bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400854 : pop rsp ; xor byte ptr [r10], r12b ; ret
0x00000000004005d6 : push 0 ; jmp 0x4005c5
0x00000000004005e6 : push 1 ; jmp 0x4005c5
0x00000000004005f6 : push 2 ; jmp 0x4005c5
0x0000000000400606 : push 3 ; jmp 0x4005c5
0x0000000000400616 : push 4 ; jmp 0x4005c5
0x0000000000400626 : push 5 ; jmp 0x4005c5
0x0000000000400636 : push 6 ; jmp 0x4005c5
0x0000000000400828 : push rax ; adc byte ptr [rax], ah ; ret
0x0000000000400847 : push rax ; and byte ptr [rax], ah ; ret
0x000000000040073a : push rbp ; mov rbp, rsp ; call rax
0x00000000004005b9 : ret
0x0000000000400811 : retf
0x0000000000400842 : rol dword ptr [rcx + 0x5f], cl ; mov r11d, 0x602050 ; ret
0x0000000000400737 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x0000000000400850 : sbb al, byte ptr [rcx + 0x5d] ; pop r12 ; xor byte ptr [r10], r12b ; ret
0x0000000000400622 : sbb cl, byte ptr [rdx] ; and byte ptr [rax], al ; push 5 ; jmp 0x4005c9
0x0000000000400602 : sub cl, byte ptr [rdx] ; and byte ptr [rax], al ; push 3 ; jmp 0x4005c9
0x00000000004008d5 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004008d4 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004006aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004008ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400736 : test eax, eax ; je 0x400733 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400735 : test rax, rax ; je 0x400734 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400855 : xor byte ptr [r10], r12b ; ret
0x0000000000400856 : xor byte ptr [rdx], ah ; ret
0x00000000004005f2 : xor cl, byte ptr [rdx] ; and byte ptr [rax], al ; push 2 ; jmp 0x4005c9
0x0000000000400823 : xor ebx, ebx ; pop r14 ; mov edi, 0x601050 ; ret
