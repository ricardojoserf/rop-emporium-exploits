0x000000000040064e: adc byte ptr [rax], ah; jmp rax; 
0x000000000040061f: add bl, dh; ret; 
0x00000000004007f2: add byte ptr [rax + 0x33], cl; ror byte ptr [r8 - 0x77], 1; ret 0x8b48; 
0x00000000004007a6: add byte ptr [rax - 0x39], cl; mov dword ptr [rax], 0x90000000; leave; ret; 
0x0000000000400645: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400687: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040056a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004008ad: add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004007a4: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; mov dword ptr [rax], 0x90000000; leave; ret; 
0x0000000000400643: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400685: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x00000000004008ab: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004007a2: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; mov dword ptr [rax], 0x90000000; leave; ret; 
0x0000000000400704: add byte ptr [rax], al; add byte ptr [rax], al; call 0x714; mov eax, 0; pop rbp; ret; 
0x00000000004007a3: add byte ptr [rax], al; add byte ptr [rax], al; mov rdi, 0; nop; leave; ret; 
0x000000000040070e: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000004007aa: add byte ptr [rax], al; add byte ptr [rax], al; nop; leave; ret; 
0x000000000040070a: add byte ptr [rax], al; add byte ptr [rax], bh; pop rbp; ret; 
0x0000000000400706: add byte ptr [rax], al; call 0x714; mov eax, 0; pop rbp; ret; 
0x000000000040070b: add byte ptr [rax], al; mov eax, 0; pop rbp; ret; 
0x00000000004007a5: add byte ptr [rax], al; mov rdi, 0; nop; leave; ret; 
0x0000000000400656: add byte ptr [rax], al; pop rbp; ret; 
0x00000000004008b2: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000400644: add byte ptr [rax], al; test rax, rax; je 0x658; pop rbp; mov edi, 0x601058; jmp rax; 
0x0000000000400686: add byte ptr [rax], al; test rax, rax; je 0x698; pop rbp; mov edi, 0x601058; jmp rax; 
0x00000000004007ac: add byte ptr [rax], al; nop; leave; ret; 
0x000000000040070c: add byte ptr [rax], bh; pop rbp; ret; 
0x0000000000400655: add byte ptr [rax], r8b; pop rbp; ret; 
0x00000000004006b7: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000400566: add eax, 0x200a8d; test rax, rax; je 0x572; call rax; 
0x0000000000400573: add esp, 8; ret; 
0x0000000000400572: add rsp, 8; ret; 
0x0000000000400569: and byte ptr [rax], al; test rax, rax; je 0x572; call rax; 
0x0000000000400569: and byte ptr [rax], al; test rax, rax; je 0x572; call rax; add rsp, 8; ret; 
0x00000000004006fe: call 0x590; mov eax, 0; call 0x714; mov eax, 0; pop rbp; ret; 
0x0000000000400829: call 0x5a0; nop; leave; ret; 
0x00000000004006ad: call 0x630; mov byte ptr [rip + 0x2009bf], 1; pop rbp; ret; 
0x0000000000400708: call 0x714; mov eax, 0; pop rbp; ret; 
0x0000000000400570: call rax; 
0x0000000000400570: call rax; add rsp, 8; ret; 
0x000000000040088c: fmul qword ptr [rax - 0x7d]; ret; 
0x0000000000400562: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200a8d; test rax, rax; je 0x572; call rax; 
0x000000000040056e: je 0x572; call rax; 
0x000000000040056e: je 0x572; call rax; add rsp, 8; ret; 
0x0000000000400649: je 0x658; pop rbp; mov edi, 0x601058; jmp rax; 
0x000000000040068b: je 0x698; pop rbp; mov edi, 0x601058; jmp rax; 
0x0000000000400a73: jmp qword ptr [rbp]; 
0x0000000000400651: jmp rax; 
0x0000000000400823: lea eax, [rbp - 0x20]; mov rdi, rax; call 0x5a0; nop; leave; ret; 
0x0000000000400567: lea ecx, [rdx]; and byte ptr [rax], al; test rax, rax; je 0x572; call rax; 
0x0000000000400822: lea rax, [rbp - 0x20]; mov rdi, rax; call 0x5a0; nop; leave; ret; 
0x00000000004006b2: mov byte ptr [rip + 0x2009bf], 1; pop rbp; ret; 
0x00000000004007a1: mov dword ptr [rax], 0; mov rdi, 0; nop; leave; ret; 
0x00000000004007a9: mov dword ptr [rax], 0x90000000; leave; ret; 
0x0000000000400703: mov eax, 0; call 0x714; mov eax, 0; pop rbp; ret; 
0x000000000040070d: mov eax, 0; pop rbp; ret; 
0x0000000000400565: mov eax, dword ptr [rip + 0x200a8d]; test rax, rax; je 0x572; call rax; 
0x00000000004006ab: mov ebp, esp; call 0x630; mov byte ptr [rip + 0x2009bf], 1; pop rbp; ret; 
0x00000000004007a8: mov edi, 0; nop; leave; ret; 
0x00000000004006b4: mov edi, 0x1002009; pop rbp; ret; 
0x000000000040064c: mov edi, 0x601058; jmp rax; 
0x0000000000400827: mov edi, eax; call 0x5a0; nop; leave; ret; 
0x00000000004007a0: mov qword ptr [rax], 0; mov rdi, 0; nop; leave; ret; 
0x0000000000400564: mov rax, qword ptr [rip + 0x200a8d]; test rax, rax; je 0x572; call rax; 
0x00000000004006aa: mov rbp, rsp; call 0x630; mov byte ptr [rip + 0x2009bf], 1; pop rbp; ret; 
0x00000000004007a7: mov rdi, 0; nop; leave; ret; 
0x0000000000400826: mov rdi, rax; call 0x5a0; nop; leave; ret; 
0x0000000000400653: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000400695: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000400568: or ah, byte ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400563: or byte ptr [rax - 0x75], cl; add eax, 0x200a8d; test rax, rax; je 0x572; call rax; 
0x00000000004006b5: or dword ptr [rax], esp; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040068c: or ebx, dword ptr [rbp - 0x41]; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040089c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040089e: pop r13; pop r14; pop r15; ret; 
0x00000000004008a0: pop r14; pop r15; ret; 
0x00000000004008a2: pop r15; ret; 
0x000000000040064d: pop rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040064b: pop rbp; mov edi, 0x601058; jmp rax; 
0x000000000040089b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040089f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400658: pop rbp; ret; 
0x00000000004008a3: pop rdi; ret; 
0x00000000004008a1: pop rsi; pop r15; ret; 
0x000000000040089d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x00000000004006a9: push rbp; mov rbp, rsp; call 0x630; mov byte ptr [rip + 0x2009bf], 1; pop rbp; ret; 
0x00000000004007f9: ret 0x8b48; 
0x00000000004007f5: ror byte ptr [r8 - 0x77], 1; ret 0x8b48; 
0x00000000004007f6: ror byte ptr [rax - 0x77], 1; ret 0x8b48; 
0x0000000000400648: sal byte ptr [rbp + rcx + 0x5d], 0xbf; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040068a: sal byte ptr [rbx + rcx + 0x5d], 0xbf; pop rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040056d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004008b5: sub esp, 8; add rsp, 8; ret; 
0x0000000000400561: sub esp, 8; mov rax, qword ptr [rip + 0x200a8d]; test rax, rax; je 0x572; call rax; 
0x00000000004008b4: sub rsp, 8; add rsp, 8; ret; 
0x0000000000400560: sub rsp, 8; mov rax, qword ptr [rip + 0x200a8d]; test rax, rax; je 0x572; call rax; 
0x000000000040056c: test eax, eax; je 0x572; call rax; 
0x000000000040056c: test eax, eax; je 0x572; call rax; add rsp, 8; ret; 
0x0000000000400647: test eax, eax; je 0x658; pop rbp; mov edi, 0x601058; jmp rax; 
0x0000000000400689: test eax, eax; je 0x698; pop rbp; mov edi, 0x601058; jmp rax; 
0x000000000040056b: test rax, rax; je 0x572; call rax; 
0x000000000040056b: test rax, rax; je 0x572; call rax; add rsp, 8; ret; 
0x0000000000400646: test rax, rax; je 0x658; pop rbp; mov edi, 0x601058; jmp rax; 
0x0000000000400688: test rax, rax; je 0x698; pop rbp; mov edi, 0x601058; jmp rax; 
0x00000000004007af: leave; ret; 
0x00000000004007ae: nop; leave; ret; 
0x0000000000400576: ret; 

107 gadgets found